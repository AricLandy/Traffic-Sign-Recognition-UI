{"ast":null,"code":"var _jsxFileName = \"/Users/alandy/Documents/Traffic_Sign_UI/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ImageUploader from 'react-images-upload'; // import Button from '@material-ui/core/Button';\n// import Paper from '@material-ui/core/Paper';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import { css } from 'glamor';\n// import IconButton from '@material-ui/core/IconButton';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mageURL: '',\n      pictures: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  } // When a picture is uploaded\n\n\n  onDrop(picture) {\n    // Set the picture\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n    console.log(picture);\n  }\n\n  handleUploadImage(e) {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    data.append('filename', this.fileName.value);\n    fetch('http://0.0.0.0:5000/upload', {\n      method: 'PUT',\n      body: data\n    }).then(response => {\n      return response.json(); // response.json().then((body) => {\n      //   this.setState({ imageURL: `http://localhost:8000/${body.file}` });\n      // });\n    }).then(data => {\n      console.log(data);\n    });\n  }\n\n  render() {\n    console.log(\"Render app\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Traffic Sign Recognition\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Currently Supports: Stop Sign, Rail Road Crossing, Yield, One Way, Handicapped Parking, Pedestrian Crossing, Wrong Way\"), React.createElement(ImageUploader, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: this.onDrop,\n      imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n      maxFileSize: 5242880,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleUploadImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: ref => {\n        this.fileName = ref;\n      },\n      type: \"text\",\n      placeholder: \"Enter the desired name of file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Upload\")), React.createElement(\"img\", {\n      src: this.state.imageURL,\n      alt: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n} // App.configure(() => {\n//   var cors = require('cors');\n//   App.use(cors());\n// })\n\n\nexport default App;","map":{"version":3,"sources":["/Users/alandy/Documents/Traffic_Sign_UI/src/App.js"],"names":["React","ImageUploader","App","Component","constructor","props","state","mageURL","pictures","onDrop","bind","handleUploadImage","picture","setState","concat","console","log","e","preventDefault","data","FormData","append","uploadInput","files","fileName","value","fetch","method","body","then","response","json","render","ref","imageURL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ImageUploader from 'react-images-upload';\n// import Button from '@material-ui/core/Button';\n// import Paper from '@material-ui/core/Paper';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import { css } from 'glamor';\n// import IconButton from '@material-ui/core/IconButton';\n\n\nclass App extends React.Component{\n\n  constructor(props) {\n        super(props);\n          this.state = {\n            mageURL: '',\n            pictures: []\n          };\n         this.onDrop = this.onDrop.bind(this);\n         this.handleUploadImage = this.handleUploadImage.bind(this);\n    }\n\n  // When a picture is uploaded\n  onDrop(picture) {\n      // Set the picture\n      this.setState({\n          pictures: this.state.pictures.concat(picture),\n      });\n\n      console.log(picture);\n  }\n\n  handleUploadImage(e) {\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    data.append('filename', this.fileName.value);\n\n    fetch('http://0.0.0.0:5000/upload', {\n      method: 'PUT',\n      body: data\n    }).then((response) => {\n      return response.json()\n      // response.json().then((body) => {\n      //   this.setState({ imageURL: `http://localhost:8000/${body.file}` });\n      // });\n    }).then((data) => {\n      console.log(data);\n    });\n  }\n\n\n  render(){\n    console.log(\"Render app\");\n    return(\n      <div>\n        <h1>Traffic Sign Recognition</h1>\n        <p> Currently Supports: Stop Sign, Rail Road Crossing, Yield, One Way, Handicapped Parking, Pedestrian Crossing, Wrong Way</p>\n        <ImageUploader\n            withIcon={true}\n            buttonText='Choose images'\n            onChange={this.onDrop}\n            imgExtension={['.jpg', '.gif', '.png', '.gif']}\n            maxFileSize={5242880}\n        />\n        <form onSubmit={this.handleUploadImage}>\n                <div>\n                  <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\n                </div>\n                <div>\n                  <input ref={(ref) => { this.fileName = ref; }} type=\"text\" placeholder=\"Enter the desired name of file\" />\n                </div>\n                <br />\n                <div>\n                  <button>Upload</button>\n                </div>\n                <img src={this.state.imageURL} alt=\"img\" />\n              </form>\n        </div>\n    )\n  }\n}\n// App.configure(() => {\n//   var cors = require('cors');\n//   App.use(cors());\n// })\nexport default App;\n"]},"metadata":{},"sourceType":"module"}